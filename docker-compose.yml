version: "3"
services:
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      vpcbr:
        ipv4_address: 10.5.0.2

  mongodb:
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: flaskdb
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
    ports:
      - "27017-27019:27017-27019"
    networks:
      vpcbr:
        ipv4_address: 10.5.0.3

  myqueuer:
    build: ./myqueuer
    ports:
      - "5000:5000"
    volumes:
      - .:/myqueuer
    environment:
      FLASK_ENV: development
    depends_on:
      - redis
    networks:
      vpcbr:
        ipv4_address: 10.5.0.4

  receiver:
    build: ./receiver
    ports:
      - "80:80"
    volumes:
      - .:/receiver
    environment:
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_DATABASE: flaskdb
      MONGODB_HOSTNAME: mongodb
      FLASK_ENV: development
    networks:
      vpcbr:
        ipv4_address: 10.5.0.5
    depends_on:
      - myqueuer

  producer:
    build: ./producer
    volumes:
      - .:/producer
    environment:
      FLASK_ENV: development
    networks:
      vpcbr:
        ipv4_address: 10.5.0.6
    depends_on:
      - receiver

networks:
  vpcbr:
    driver: bridge
    ipam:
     config:
       - subnet: 10.5.0.0/16

volumes:
  mongodbdata:
    driver: local
